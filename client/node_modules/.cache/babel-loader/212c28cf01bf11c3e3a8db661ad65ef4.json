{"ast":null,"code":"var _jsxFileName = \"/Users/aflahhaami/reddish/client/src/components/CommentInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { addComment } from '../reducers/postCommentsReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { Link, Typography, TextField, Button } from '@material-ui/core';\nimport { useCommentInputStyles } from '../styles/muiStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentInput = ({\n  user,\n  postId,\n  isMobile\n}) => {\n  _s();\n  const classes = useCommentInputStyles();\n  const dispatch = useDispatch();\n  const [comment, setComment] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const handlePostComment = async e => {\n    e.preventDefault();\n    try {\n      setSubmitting(true);\n      await dispatch(addComment(postId, comment));\n      setSubmitting(false);\n      setComment('');\n      dispatch(notify(`Comment submitted!`, 'success'));\n    } catch (err) {\n      setSubmitting(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: [user ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      children: [\"Comment as\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n        component: RouterLink,\n        to: `/u/${user.username}`,\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Log in or sign up to leave a comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handlePostComment,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: `What are your thoughts?`,\n        multiline: true,\n        fullWidth: true,\n        required: true,\n        rows: 4,\n        rowsMax: Infinity,\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        variant: \"outlined\",\n        size: isMobile ? 'small' : 'medium'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        variant: \"contained\",\n        className: classes.commentBtn,\n        startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 22\n        }, this),\n        size: isMobile ? 'small' : 'medium',\n        disabled: !user || submitting,\n        children: !user ? 'Login to comment' : submitting ? 'Commenting' : 'Comment'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentInput, \"btuTHi0JyVzdVpxmx0T3wFNZr/U=\", false, function () {\n  return [useCommentInputStyles, useDispatch];\n});\n_c = CommentInput;\nexport default CommentInput;\nvar _c;\n$RefreshReg$(_c, \"CommentInput\");","map":{"version":3,"names":["React","useState","Link","RouterLink","useDispatch","addComment","notify","getErrorMsg","Typography","TextField","Button","useCommentInputStyles","SendIcon","jsxDEV","_jsxDEV","CommentInput","user","postId","isMobile","_s","classes","dispatch","comment","setComment","submitting","setSubmitting","handlePostComment","e","preventDefault","err","className","wrapper","children","variant","component","to","username","fileName","_jsxFileName","lineNumber","columnNumber","form","onSubmit","placeholder","multiline","fullWidth","required","rows","rowsMax","Infinity","value","onChange","target","size","type","color","commentBtn","startIcon","disabled","_c","$RefreshReg$"],"sources":["/Users/aflahhaami/reddish/client/src/components/CommentInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { addComment } from '../reducers/postCommentsReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport getErrorMsg from '../utils/getErrorMsg';\n\nimport { Link, Typography, TextField, Button } from '@material-ui/core';\nimport { useCommentInputStyles } from '../styles/muiStyles';\nimport SendIcon from '@material-ui/icons/Send';\n\nconst CommentInput = ({ user, postId, isMobile }) => {\n  const classes = useCommentInputStyles();\n  const dispatch = useDispatch();\n  const [comment, setComment] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  const handlePostComment = async (e) => {\n    e.preventDefault();\n    try {\n      setSubmitting(true);\n      await dispatch(addComment(postId, comment));\n      setSubmitting(false);\n      setComment('');\n      dispatch(notify(`Comment submitted!`, 'success'));\n    } catch (err) {\n      setSubmitting(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      {user ? (\n        <Typography variant=\"body2\">\n          Comment as{' '}\n          <Link component={RouterLink} to={`/u/${user.username}`}>\n            {user.username}\n          </Link>\n        </Typography>\n      ) : (\n        <Typography variant=\"body1\">\n          Log in or sign up to leave a comment\n        </Typography>\n      )}\n      <form className={classes.form} onSubmit={handlePostComment}>\n        <TextField\n          placeholder={`What are your thoughts?`}\n          multiline\n          fullWidth\n          required\n          rows={4}\n          rowsMax={Infinity}\n          value={comment}\n          onChange={(e) => setComment(e.target.value)}\n          variant=\"outlined\"\n          size={isMobile ? 'small' : 'medium'}\n        />\n        <Button\n          type=\"submit\"\n          color=\"primary\"\n          variant=\"contained\"\n          className={classes.commentBtn}\n          startIcon={<SendIcon />}\n          size={isMobile ? 'small' : 'medium'}\n          disabled={!user || submitting}\n        >\n          {!user ? 'Login to comment' : submitting ? 'Commenting' : 'Comment'}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default CommentInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}