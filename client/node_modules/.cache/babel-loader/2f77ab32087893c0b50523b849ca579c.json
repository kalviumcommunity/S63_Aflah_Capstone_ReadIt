{"ast":null,"code":"import axios from 'axios';\nimport backendUrl from '../backendUrl';\nimport { token } from './auth';\nconst baseUrl = `${backendUrl}/api/subreddits`;\nconst setConfig = () => {\n  return {\n    headers: {\n      'x-auth-token': token\n    }\n  };\n};\nconst getAllSubreddits = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\nconst getSubreddit = async (subredditName, sortBy, limit, page) => {\n  const response = await axios.get(`${baseUrl}/r/${subredditName}/?sortby=${sortBy}&limit=${limit}&page=${page}`);\n  return response.data;\n};\nconst createSubreddit = async subredditObj => {\n  const response = await axios.post(`${baseUrl}`, subredditObj, setConfig());\n  return response.data;\n};\nconst subscribeSub = async id => {\n  const response = await axios.post(`${baseUrl}/${id}/subscribe`, null, setConfig());\n  return response.data;\n};\nconst updateDescription = async (id, descriptionObj) => {\n  const response = await axios.patch(`${baseUrl}/${id}`, descriptionObj, setConfig());\n  return response.data;\n};\nconst getTopSubreddits = async () => {\n  const response = await axios.get(`${baseUrl}/top10`);\n  return response.data;\n};\nconst subService = {\n  getAllSubreddits,\n  createSubreddit,\n  getSubreddit,\n  subscribeSub,\n  updateDescription,\n  getTopSubreddits\n};\nexport default subService;","map":{"version":3,"names":["axios","backendUrl","token","baseUrl","setConfig","headers","getAllSubreddits","response","get","data","getSubreddit","subredditName","sortBy","limit","page","createSubreddit","subredditObj","post","subscribeSub","id","updateDescription","descriptionObj","patch","getTopSubreddits","subService"],"sources":["/Users/aflahhaami/S63_Aflah_Capstone_ReadIt/client/src/services/subs.js"],"sourcesContent":["import axios from 'axios';\nimport backendUrl from '../backendUrl';\nimport { token } from './auth';\n\nconst baseUrl = `${backendUrl}/api/subreddits`;\n\nconst setConfig = () => {\n  return {\n    headers: { 'x-auth-token': token },\n  };\n};\n\nconst getAllSubreddits = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst getSubreddit = async (subredditName, sortBy, limit, page) => {\n  const response = await axios.get(\n    `${baseUrl}/r/${subredditName}/?sortby=${sortBy}&limit=${limit}&page=${page}`\n  );\n  return response.data;\n};\n\nconst createSubreddit = async (subredditObj) => {\n  const response = await axios.post(`${baseUrl}`, subredditObj, setConfig());\n  return response.data;\n};\n\nconst subscribeSub = async (id) => {\n  const response = await axios.post(\n    `${baseUrl}/${id}/subscribe`,\n    null,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst updateDescription = async (id, descriptionObj) => {\n  const response = await axios.patch(\n    `${baseUrl}/${id}`,\n    descriptionObj,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst getTopSubreddits = async () => {\n  const response = await axios.get(`${baseUrl}/top10`);\n  return response.data;\n};\n\nconst subService = {\n  getAllSubreddits,\n  createSubreddit,\n  getSubreddit,\n  subscribeSub,\n  updateDescription,\n  getTopSubreddits,\n};\n\nexport default subService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,eAAe;AACtC,SAASC,KAAK,QAAQ,QAAQ;AAE9B,MAAMC,OAAO,GAAG,GAAGF,UAAU,iBAAiB;AAE9C,MAAMG,SAAS,GAAGA,CAAA,KAAM;EACtB,OAAO;IACLC,OAAO,EAAE;MAAE,cAAc,EAAEH;IAAM;EACnC,CAAC;AACH,CAAC;AAED,MAAMI,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACL,OAAO,CAAC;EACzC,OAAOI,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMC,YAAY,GAAG,MAAAA,CAAOC,aAAa,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,KAAK;EACjE,MAAMP,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAC9B,GAAGL,OAAO,MAAMQ,aAAa,YAAYC,MAAM,UAAUC,KAAK,SAASC,IAAI,EAC7E,CAAC;EACD,OAAOP,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMM,eAAe,GAAG,MAAOC,YAAY,IAAK;EAC9C,MAAMT,QAAQ,GAAG,MAAMP,KAAK,CAACiB,IAAI,CAAC,GAAGd,OAAO,EAAE,EAAEa,YAAY,EAAEZ,SAAS,CAAC,CAAC,CAAC;EAC1E,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMS,YAAY,GAAG,MAAOC,EAAE,IAAK;EACjC,MAAMZ,QAAQ,GAAG,MAAMP,KAAK,CAACiB,IAAI,CAC/B,GAAGd,OAAO,IAAIgB,EAAE,YAAY,EAC5B,IAAI,EACJf,SAAS,CAAC,CACZ,CAAC;EACD,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMW,iBAAiB,GAAG,MAAAA,CAAOD,EAAE,EAAEE,cAAc,KAAK;EACtD,MAAMd,QAAQ,GAAG,MAAMP,KAAK,CAACsB,KAAK,CAChC,GAAGnB,OAAO,IAAIgB,EAAE,EAAE,EAClBE,cAAc,EACdjB,SAAS,CAAC,CACZ,CAAC;EACD,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMc,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMhB,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGL,OAAO,QAAQ,CAAC;EACpD,OAAOI,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMe,UAAU,GAAG;EACjBlB,gBAAgB;EAChBS,eAAe;EACfL,YAAY;EACZQ,YAAY;EACZE,iBAAiB;EACjBG;AACF,CAAC;AAED,eAAeC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}